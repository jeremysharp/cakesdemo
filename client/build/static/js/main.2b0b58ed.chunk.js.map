{"version":3,"sources":["sections/components/YumFactor.tsx","sections/components/Cake.tsx","sections/components/CakeButtons.tsx","sections/Cakes.tsx","sections/components/ImageSelect.tsx","sections/components/CakeForm.tsx","sections/SidePanel.tsx","sections/Controls.tsx","sections/ViewCake.tsx","sections/Header.tsx","sections/Footer.tsx","App.tsx","reportWebVitals.js","index.js","sections/ViewCake.module.css","sections/components/CakeForm.module.css","sections/Controls.module.css","sections/Footer.module.css"],"names":["YumFactor","yumFactor","setYumFactor","className","min","max","marks","value","onChange","yum","Cake","viewCake","cake","children","imageUrl","includes","API_ROOT","Card","Img","variant","src","onClick","id","Body","Title","name","Text","comment","CakeButtons","editCake","deleteCake","handleDelete","a","Swal","fire","icon","title","text","showCancelButton","confirmButtonText","isConfirmed","Button","size","Cakes","cakesList","Container","length","map","ImageSelect","imageChange","Form","Group","controlId","Control","type","accept","CakeForm","setShow","insertCake","stopEdit","useState","setName","setComment","image","setImage","setImageUrl","nameIsValid","setNameIsValid","commentIsValid","setCommentIsValid","useCurrentImage","setUseCurrentImage","setId","inputRef","useRef","useEffect","current","focus","parseInt","saveCake","axios","post","data","formData","FormData","append","get","retrievedCake","toast","success","error","handleSaveCake","VALIDATIONS","valid","desc","handleChange","event","target","inputName","inputValue","cakeTmp","styles","fieldLabel","InputGroup","FormControl","ref","placeholder","as","URL","createObjectURL","files","errors","Object","keys","forEach","field","preview","SidePanel","show","Offcanvas","onHide","Header","closeButton","Controls","controls","href","ViewCake","container","main","alt","overlay","info","yumTitle","Footer","App","state","editingCake","viewingCake","getCakes","response","setState","find","index","findIndex","c","assign","showState","delete","cakes","splice","componentDidMount","this","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.2b0b58ed.chunk.js","sourcesContent":["import React, { Dispatch } from 'react';\nimport Slider from 'rc-slider';\n\ninterface Props {\n    yumFactor: number;\n    setYumFactor?: Dispatch<number>;\n}\n\nconst YumFactor = ({ yumFactor, setYumFactor }: Props): JSX.Element => {\n    const handleSetYum = (yum: number): void => {\n        if (setYumFactor) setYumFactor(yum);\n    };\n    return (\n        <div className=\"slider-container\">\n            <div className=\"field-label\">Yum Factor</div>\n            <div className=\"slider\">\n                <Slider className=\"slider\" min={1} max={5} marks={{ 1: 1, 2: 2, 3: 3, 4: 4, 5: 5 }} value={yumFactor} onChange={handleSetYum} />\n            </div>\n        </div>\n    );\n};\nexport default YumFactor;\n","import React from 'react';\nimport Card from 'react-bootstrap/Card';\nimport YumFactor from './YumFactor';\nimport { CakeValidator } from '../../validations/validations';\nimport { API_ROOT } from '../../config.json';\n\ninterface Props {\n    cake: CakeValidator;\n    viewCake?: (key: number) => void;\n    children?: React.ReactNode;\n}\n\nconst Cake = ({ viewCake, cake, children }: Props): JSX.Element => {\n    const handleView = (): void => {\n        if (cake && typeof cake.id === 'number') viewCake(cake.id);\n    };\n\n    // check to see if imageUrl contains filename or localised URL object\n    const imageUrl: string = !cake ? '' : cake.imageUrl.includes('.') ? `${API_ROOT}/image/${cake.imageUrl}` : cake.imageUrl;\n    return cake ? (\n        <Card className=\"cake-card\">\n            <Card.Img variant=\"top\" src={imageUrl} onClick={handleView} />\n            <Card.Body>\n                <Card.Title>{cake.name}</Card.Title>\n                <Card.Text className=\"comment\">{cake.comment}</Card.Text>\n                <YumFactor yumFactor={cake.yumFactor} />\n                {children}\n            </Card.Body>\n        </Card>\n    ) : null;\n};\nexport default Cake;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Swal from 'sweetalert2';\nimport { CakeValidator, AlertResponseValidator } from '../../validations/validations';\ninterface Props {\n    cake: CakeValidator;\n    editCake: (id: number) => void;\n    deleteCake: (id: number) => Promise<void>;\n}\n\nconst CakeButtons = ({ cake, editCake, deleteCake }: Props): JSX.Element => {\n    const handleEdit = (): void => {\n        if (typeof cake.id === 'number') editCake(cake.id);\n    };\n    const handleDelete = async (): Promise<void> => {\n        if (typeof cake.id === 'number') {\n            const result: AlertResponseValidator = await Swal.fire({\n                icon: 'question',\n                title: 'Delete cake',\n                text: 'Are you sure?',\n                showCancelButton: true,\n                confirmButtonText: 'Yes, delete it',\n            });\n            if (result.isConfirmed) deleteCake(cake.id);\n        }\n    };\n    return (\n        <div>\n            <Button variant=\"outline-primary\" size=\"sm\" onClick={handleEdit}>\n                <i className=\"bi bi-pencil\" />\n                <span className=\"icon-left\">Edit</span>\n            </Button>\n            &nbsp;\n            <Button variant=\"outline-danger\" size=\"sm\" onClick={handleDelete}>\n                <i className=\"bi bi-trash\" />\n                <span className=\"icon-left\">Delete</span>\n            </Button>\n        </div>\n    );\n};\nexport default CakeButtons;\n","import React from 'react';\nimport Cake from './components/Cake';\nimport Container from 'react-bootstrap/Container';\nimport CakeButtons from './components/CakeButtons';\nimport { CakeValidator, CakesValidator } from '../validations/validations';\n\ninterface Props {\n    cakesList: CakesValidator;\n    editCake: (id: number) => void;\n    deleteCake: (id: number) => Promise<void>;\n    viewCake: (id: number) => void;\n}\n\nconst Cakes = ({ cakesList, editCake, deleteCake, viewCake }: Props): JSX.Element => {\n    return (\n        <Container className=\"flexme\">\n            {cakesList.length ? (\n                cakesList.map(\n                    (cake: CakeValidator): JSX.Element => {\n                        return (\n                            <Cake key={cake.id} cake={cake} viewCake={viewCake}>\n                                <CakeButtons cake={cake} editCake={editCake} deleteCake={deleteCake} />\n                            </Cake>\n                        );\n                    }\n                )\n            ) : (\n                <div>No cakes yet 😞 Try adding a new one!</div>\n            )}\n        </Container>\n    );\n};\n\nexport default Cakes;\n","import React, { ChangeEvent } from 'react';\nimport Form from 'react-bootstrap/Form';\n\ninterface Props {\n    imageChange: (event: ChangeEvent<HTMLInputElement>) => void;\n}\n\nconst ImageSelect = ({ imageChange }: Props): JSX.Element => {\n    return (\n        <Form.Group controlId=\"formFile\" className=\"mb-3\">\n            <Form.Control type=\"file\" onChange={imageChange} accept=\".jpg,.jpeg,.gif,.png\" />\n        </Form.Group>\n    );\n};\n\nexport default ImageSelect;\n","//@ts-ignore\nimport React, { useState, useRef, useEffect, ChangeEvent } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport Form from 'react-bootstrap/Form';\nimport FormControl from 'react-bootstrap/FormControl';\nimport Container from 'react-bootstrap/Container';\nimport ImageSelect from './ImageSelect';\nimport Cake from './Cake';\nimport axios from 'axios';\nimport { toast } from 'react-toastify';\nimport YumFactor from './YumFactor';\nimport { API_ROOT } from '../../config.json';\nimport styles from './CakeForm.module.css';\nimport 'rc-slider/assets/index.css';\nimport { CakeOrEmpty, CakeValidator, DataResponseValidator, FieldValidations } from '../../validations/validations';\n\ninterface Props {\n    cake: CakeOrEmpty;\n    setShow: (state: boolean) => void;\n    insertCake: (cake: CakeValidator) => void;\n    stopEdit: () => void;\n}\n\nconst CakeForm = ({ cake = null, setShow, insertCake, stopEdit }: Props): JSX.Element => {\n    const [name, setName] = useState('');\n    const [comment, setComment] = useState('');\n    const [yumFactor, setYumFactor] = useState<any>(0);\n    const [image, setImage] = useState<any>(null);\n    const [imageUrl, setImageUrl] = useState('');\n    const [nameIsValid, setNameIsValid] = useState('invalid');\n    const [commentIsValid, setCommentIsValid] = useState('invalid');\n    const [useCurrentImage, setUseCurrentImage] = useState(false);\n    const [id, setId] = useState<number | null>(null);\n\n    const inputRef = useRef<HTMLInputElement>(null);\n\n    useEffect(() => {\n        if (inputRef.current !== null) inputRef.current.focus();\n        if (cake && typeof cake.id === 'number') {\n            setId(cake.id);\n            setName(cake.name);\n            setComment(cake.comment);\n            setYumFactor(parseInt(cake.yumFactor));\n            setImageUrl(cake.imageUrl);\n            setUseCurrentImage(true);\n        }\n    }, [cake]);\n\n    const cancelCake = () => {\n        setName('');\n        setComment('');\n        setYumFactor(0);\n        setImage(null);\n        setShow(false);\n        stopEdit();\n    };\n\n    const saveCake = async ({ image, cake }: { image: File; cake: CakeValidator }) => {\n        try {\n            const { data }: { data: DataResponseValidator } = await axios.post(`${API_ROOT}/cake`, cake);\n            if (!useCurrentImage) {\n                const formData: FormData = new FormData();\n                formData.append('image', image);\n                await axios.post(`${API_ROOT}/image/${data.id}`, formData);\n            }\n            const { data: retrievedCake }: { data: CakeValidator } = await axios.get(`${API_ROOT}/cake/${data.id}`);\n            insertCake(retrievedCake);\n            stopEdit();\n            toast.success('Cake saved!');\n        } catch (err) {\n            toast.error('Save failed: ' + err);\n        }\n    };\n\n    const handleSaveCake = async () => {\n        const cake: CakeValidator = { name, comment, yumFactor };\n        if (!useCurrentImage && image) cake.image = image.name;\n        if (id) cake.id = id;\n        await saveCake({ cake, image });\n        setShow(false);\n    };\n    const VALIDATIONS: FieldValidations = {\n        name: {\n            valid: () => name.length <= 30 && name.length > 0,\n            desc: 'Name is required, and must be 30 characters or less',\n        },\n        comment: {\n            valid: () => comment.length <= 200 && comment.length > 0,\n            desc: 'Comment is required, and must be 200 characters or less',\n        },\n        yumFactor: {\n            valid: () => [1, 2, 3, 4, 5].includes(parseInt(yumFactor)),\n            desc: 'Yum Factor is required, and must be a number between 1 and 5',\n        },\n        image: {\n            valid: () => useCurrentImage || (image && image.size < 2 * 1024 * 1024),\n            desc: 'image must have a valid image less than 2MB',\n        },\n    };\n\n    const checkValidations = () => {\n        let errors = 0;\n        Object.keys(VALIDATIONS).forEach((field: string) => {\n            if (!VALIDATIONS[field].valid()) {\n                errors++;\n                toast.error(VALIDATIONS[field].desc);\n            }\n        });\n        if (!errors) handleSaveCake();\n    };\n\n    const handleChange = (event: ChangeEvent<HTMLInputElement>) => {\n        const { name: inputName, value: inputValue }: { name: string; value: string | number } = event.target;\n        switch (inputName) {\n            case 'name': {\n                setName(inputValue);\n                setNameIsValid(VALIDATIONS.name.valid() ? 'valid' : 'invalid');\n                break;\n            }\n            case 'comment': {\n                setComment(inputValue);\n                setCommentIsValid(VALIDATIONS.comment.valid() ? 'valid' : 'invalid');\n                break;\n            }\n            case 'yumFactor': {\n                setYumFactor(parseInt(inputValue));\n                break;\n            }\n            default: {\n                return;\n            }\n        }\n    };\n\n    const imageChange = (event: ChangeEvent<HTMLInputElement>) => {\n        setUseCurrentImage(false);\n        setImageUrl(URL.createObjectURL(event.target.files[0]));\n        setImage(event.target.files[0]);\n    };\n\n    const cakeTmp: any = { name, comment, yumFactor, imageUrl };\n\n    return (\n        <Container>\n            <Form>\n                <div className={styles.fieldLabel}>Name</div>\n                <InputGroup className=\"mb-3\">\n                    <FormControl\n                        ref={inputRef}\n                        name=\"name\"\n                        className={nameIsValid}\n                        placeholder=\"Give your cake a name\"\n                        aria-label=\"cake name\"\n                        value={name}\n                        onChange={handleChange}\n                    />\n                </InputGroup>\n                <div className={styles.fieldLabel}>Comment</div>\n                <InputGroup className=\"mb-3\">\n                    <FormControl\n                        name=\"comment\"\n                        as=\"textarea\"\n                        className={commentIsValid}\n                        placeholder=\"Describe your cake\"\n                        aria-label=\"comment\"\n                        value={comment}\n                        onChange={handleChange}\n                    />\n                </InputGroup>\n                <YumFactor yumFactor={yumFactor} setYumFactor={setYumFactor} />\n                <ImageSelect imageChange={imageChange} />\n                <Button onClick={checkValidations} variant=\"outline-success\" size=\"sm\">\n                    <i className=\"bi bi-save\" />\n                    <span className=\"icon-left\">Save</span>\n                </Button>\n                &nbsp;\n                <Button onClick={cancelCake} variant=\"outline-danger\" size=\"sm\">\n                    <i className=\"bi bi-x-circle\" />\n                    <span className=\"icon-left\">Cancel</span>\n                </Button>\n                <div className={styles.fieldLabel}>Preview</div>\n                <div className={styles.preview}>\n                    <Cake cake={cakeTmp} />\n                </div>\n            </Form>\n        </Container>\n    );\n};\n\nexport default CakeForm;\n","import React from 'react';\nimport Offcanvas from 'react-bootstrap/Offcanvas';\nimport CakeForm from './components/CakeForm';\nimport { CakeValidator } from '../validations/validations';\n\ninterface Props {\n    show: boolean;\n    setShow: (state: boolean) => void;\n    insertCake: (cake: CakeValidator) => void;\n    stopEdit: () => void;\n    cake: CakeValidator | null;\n}\n\nconst SidePanel = ({ show, setShow, insertCake, stopEdit, cake = null }: Props): JSX.Element => {\n    const handleClose = () => {\n        setShow(false);\n    };\n    return (\n        <Offcanvas show={show} onHide={handleClose}>\n            <Offcanvas.Header closeButton>\n                <Offcanvas.Title>{cake ? 'Edit' : 'Add'} Cake</Offcanvas.Title>\n            </Offcanvas.Header>\n            <Offcanvas.Body>\n                <CakeForm setShow={setShow} insertCake={insertCake} cake={cake} stopEdit={stopEdit} />\n            </Offcanvas.Body>\n        </Offcanvas>\n    );\n};\nexport default SidePanel;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport styles from './Controls.module.css';\n\ninterface Props {\n    setShow: () => void;\n}\n\nconst Controls = ({ setShow }: Props): JSX.Element => {\n    return (\n        <div className={styles.controls}>\n            <a href=\"/api-docs\" target=\"_blank\">\n                API Documentation\n            </a>\n            <Button size=\"sm\" onClick={setShow}>\n                <i className=\"bi bi-plus-lg\" />\n                <span className=\"icon-left\">Add cake</span>\n            </Button>\n        </div>\n    );\n};\nexport default Controls;\n","import React from 'react';\nimport styles from './ViewCake.module.css';\nimport { API_ROOT } from '../config.json';\nimport { CakeValidator } from '../validations/validations';\n\ninterface Props {\n    viewCake: (id: number) => void;\n    cake: CakeValidator;\n}\n\nconst ViewCake = ({ viewCake, cake }: Props): JSX.Element => {\n    const imageUrl = `${API_ROOT}/image/${cake.imageUrl}`;\n\n    const handleView = (): void => {\n        viewCake(0);\n    };\n\n    return (\n        <div className={styles.container} onClick={handleView}>\n            <div className={styles.main}>\n                <img className={styles.image} src={imageUrl} alt=\"\" />\n                <div className={styles.overlay}>\n                    <div>\n                        <div className={styles.info}>\n                            <div className={styles.yum}>\n                                <div className={styles.yumFactor}>{cake.yumFactor}</div>\n                                <div className={styles.yumTitle}>YUMFACTOR</div>\n                            </div>\n\n                            <div className={styles.comment}>\n                                <span>{cake.comment}</span>\n                            </div>\n                        </div>\n                    </div>\n                    <div className={styles.name}>{cake.name}</div>\n                </div>\n            </div>\n        </div>\n    );\n};\nexport default ViewCake;\n","import React from 'react';\n\nconst Header = (): JSX.Element => (\n    <div className=\"App-header\">\n        CAKES{' '}\n        <div className=\"sub\">\n            A Node.js &\n            <br />\n            React demo :\n            <br />\n            Jeremy Sharp\n        </div>\n    </div>\n);\n\nexport default Header;\n","import React from 'react';\nimport styles from './Footer.module.css';\n\nconst Footer = (): JSX.Element => <div className={styles.main}>© Jeremy Sharp 2021 | Privacy Policy etc</div>;\n\nexport default Footer;\n","import React from 'react';\nimport './css/App.css';\nimport axios from 'axios';\nimport Cakes from './sections/Cakes';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { toast, ToastContainer } from 'react-toastify';\nimport SidePanel from './sections/SidePanel';\nimport Controls from './sections/Controls';\nimport ViewCake from './sections/ViewCake';\nimport Header from './sections/Header';\nimport Footer from './sections/Footer';\nimport { API_ROOT } from './config.json';\nimport { CakesValidator, CakeValidator, CakeOrEmpty, ResponseValidator } from './validations/validations';\n\ninterface StateValidator {\n    cakesList: CakesValidator;\n    show: boolean;\n    editingCake: CakeOrEmpty;\n    viewingCake: CakeOrEmpty;\n}\n\nclass App extends React.Component {\n    state: StateValidator = {\n        cakesList: [],\n        show: false,\n        editingCake: null,\n        viewingCake: null,\n    };\n\n    getCakes = async (): Promise<void> => {\n        try {\n            const response: ResponseValidator = await axios.get(`${API_ROOT}/`);\n            this.setState({ cakesList: response.data });\n        } catch (err) {\n            toast.error('Getting cakes failed: ' + err);\n        }\n    };\n\n    editCake = (id: number): void => {\n        this.setState({ editingCake: this.state.cakesList.find((cake: CakeValidator) => cake?.id === id) });\n        this.setState({ show: true });\n    };\n\n    stopEdit = (): void => {\n        this.setState({ editingCake: null });\n    };\n\n    viewCake = (id: number): void => {\n        const viewingCake: CakeOrEmpty = this.state.viewingCake ? null : this.state.cakesList.find((cake: CakeValidator) => cake?.id === id);\n        this.setState({ viewingCake });\n    };\n\n    insertCake = (cake: CakeValidator): void => {\n        const index: number = this.state.cakesList.findIndex((c: CakeValidator) => c?.id === cake?.id);\n        if (index > -1) {\n            const cakesList: CakesValidator = [...this.state.cakesList];\n            cakesList[index] = Object.assign({}, cakesList[index], cake);\n            this.setState({ cakesList });\n        } else {\n            this.setState({ cakesList: [cake, ...this.state.cakesList] });\n        }\n    };\n\n    setShow = (showState?: boolean): void => {\n        this.setState({ show: !!showState });\n        if (!showState) this.setState({ editingCake: null });\n    };\n\n    deleteCake = async (id: number): Promise<void> => {\n        try {\n            await axios.delete(`${API_ROOT}/cake/${id}`);\n            const index = this.state.cakesList.findIndex((c: CakeValidator) => c?.id === id);\n            if (index > -1) {\n                const cakes: CakesValidator = [...this.state.cakesList];\n                cakes.splice(index, 1);\n                this.setState({ cakesList: cakes });\n            }\n        } catch (err) {\n            toast.error('Error deleting cake: ' + err);\n        }\n    };\n\n    componentDidMount = (): void => {\n        this.getCakes();\n    };\n\n    render(): JSX.Element {\n        const {\n            cakesList,\n            show,\n            editingCake,\n            viewingCake,\n        }: { cakesList: CakesValidator, show: boolean, editingCake: CakeOrEmpty, viewingCake: CakeOrEmpty } = this.state;\n        return (\n            <div className=\"App\">\n                {viewingCake ? <ViewCake cake={viewingCake} viewCake={this.viewCake} /> : null}\n                <Header />\n                <div className=\"main\">\n                    <Controls setShow={this.setShow} />\n\n                    <SidePanel\n                        show={show}\n                        setShow={this.setShow}\n                        insertCake={this.insertCake}\n                        cake={editingCake}\n                        stopEdit={this.stopEdit}\n                    />\n\n                    <Cakes cakesList={cakesList} editCake={this.editCake} deleteCake={this.deleteCake} viewCake={this.viewCake} />\n\n                </div>\n                <Footer />\n                <ToastContainer />\n            </div>\n        );\n    }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ViewCake_container__2kZu7\",\"main\":\"ViewCake_main__2JdQP\",\"image\":\"ViewCake_image__2mwGG\",\"overlay\":\"ViewCake_overlay__2Tj17\",\"info\":\"ViewCake_info__1jIq4\",\"yum\":\"ViewCake_yum__1wnds\",\"name\":\"ViewCake_name__1_gxr\",\"comment\":\"ViewCake_comment__1IVvG\",\"yumFactor\":\"ViewCake_yumFactor__2BCKS\",\"yumTitle\":\"ViewCake_yumTitle__1WHyl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fieldLabel\":\"CakeForm_fieldLabel__2G24i\",\"preview\":\"CakeForm_preview__2swO9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"controls\":\"Controls_controls__3uORl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Footer_main__mRqL0\"};"],"sourceRoot":""}