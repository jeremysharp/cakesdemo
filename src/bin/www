#!/usr/bin/env node

const app = require('../app');
const debug = require('debug')('new:server');
const fs = require('fs');
const http = require('http'),
    https = require('https');

require('dotenv').config({ path: __dirname + '/.env' });

const { port = 3000, sslCa, sslCert, sslKey, serverPort } = require('../config/serverSettings');

app.set('port', port);

let server;

try {
    const ca = fs.readFileSync(sslCa);
    const cert = fs.readFileSync(sslCert);
    const key = fs.readFileSync(sslKey);
    server = https.createServer({ ca, cert, key }, app);
} catch (err) {
    console.error('Could not configure SSL, defaulting to http');
    server = http.createServer(app);
}

server.listen(port);
server.on('error', onError);
server.on('listening', onListening);

function onError(error) {
    if (error.syscall !== 'listen') {
        throw error;
    }

    var bind = typeof port === 'string' ? 'Pipe ' + port : 'Port ' + port;

    switch (error.code) {
        case 'EACCES':
            console.error(bind + ' requires elevated privileges');
            process.exit(1);
            break;
        case 'EADDRINUSE':
            console.error(bind + ' is already in use');
            process.exit(1);
            break;
        default:
            throw error;
    }
}

function onListening() {
    var addr = server.address();
    var bind = typeof addr === 'string' ? 'pipe ' + addr : 'port ' + addr.port;
    console.log('Listening on ' + bind);
}
